/* $Id$ */

#include "mod_but.h"

/*
 * Check request authorization.
 *
 * Returns:
 * STATUS_ELOGIN	client not logged in yet
 * STATUS_OK		client is properly authorized or no authorization required
 * STATUS_EDENIED	client is properly authenticated, but not authorized
 * STATUS_ESTEPUP1	client is properly authenticated, but with too low auth_strength (1)
 * STATUS_ESTEPUP2	client is properly authenticated, but with too low auth_strength (2)
 * STATUS_ERROR		internal error
 */
apr_status_t
but_access_control(request_rec *r, session_t *session, mod_but_server_t *config, mod_but_dir_t *dconfig)
{
	if (!dconfig->logon_required) {
		return STATUS_OK;
	}

	ERRLOG_INFO("MOD_BUT_LOGON_REQUIRED enabled, checking authentication and authorization");
	ERRLOG_INFO("MOD_BUT_LOGON_REQUIRED dconfig [%d]", dconfig->logon_required);
	ERRLOG_INFO("MYLOGIN [%s]", r->uri);


        /* check if login url here (fix for / problem by BUT) */
/*GET*/ switch (mod_but_regexp_match(r, "(^/mylogin/login.html)|(^/webapp/mblogin/do_login)", r->uri)) {
             case STATUS_MATCH:
                                ERRLOG_INFO("MYLOGIN FOUND");
				return STATUS_OK;
             case STATUS_NOMATCH:
                                ERRLOG_CRIT("MYLOGIN NOMATCH");
				break;
             case STATUS_ERROR:
             default:
                     ERRLOG_CRIT("ERROR while /mylogin/login.html");
                     return STATUS_ERROR;
             }




/*GET*/	if (session->data->logon_state == 0) {
		ERRLOG_INFO("Client not logged in yet (session->data->logon_state == 0)");
		return STATUS_ELOGIN;
	}

/*GET*/	if (session->data->logon_state == 1) {
		ERRLOG_INFO("Client is logged in successfully (session->data->logon_state == 1)");
		if (config->service_list_enabled_on) {
			ERRLOG_INFO("service list check is on, list is [%s]", session->data->service_list);
/*GET*/			if (!apr_strnatcmp(session->data->service_list, "empty")) {
				ERRLOG_CRIT("Service list check enabled but service list not set by login server");
				return STATUS_ERROR;
			}

			/* match URL against service list */
/*GET*/			switch (mod_but_regexp_match(r, session->data->service_list, r->uri)) {
			case STATUS_MATCH:
				ERRLOG_INFO("service_list matched: pass through");
				break;
			case STATUS_NOMATCH:
				ERRLOG_CRIT("Access denied - service_list did not match");
				return STATUS_EDENIED;
			case STATUS_ERROR:
			default:
				ERRLOG_CRIT("Error while matching service_list");
				return STATUS_ERROR;
			}
		} else {
			ERRLOG_INFO("service list check is off");
		}

		/*
		 * User is authorized from the uri point of view: Need to check, if the user has the correct auth_level for the requesting uri
		 */
		ERRLOG_INFO("Authentication strength required [%d] session [%d]", dconfig->mod_but_auth_strength, session->data->auth_strength);
/*GET*/		if (session->data->auth_strength >= dconfig->mod_but_auth_strength) {
			ERRLOG_INFO("session auth_strength >= required auth_strength");
			return STATUS_OK;
		} else {
			if (dconfig->mod_but_auth_strength == 1) {
				ERRLOG_INFO("redirect to login 1");
				return STATUS_ESTEPUP1;
			}
			if (dconfig->mod_but_auth_strength == 2) {
				ERRLOG_INFO("redirect to login 2");
				return STATUS_ESTEPUP2;
			}
			return STATUS_ERROR;
		}
		/* not reached */
	}

	ERRLOG_CRIT("Unexpected value of logon state [%d]", session->data->logon_state);
	return STATUS_ERROR;
}

