###############################################################################
# OpenVAS Vulnerability Test
# $Id: gb_nmap_ms_sql_tables_net.nasl 10 2013-10-27 10:03:59Z jan $
#
# Autogenerated NSE wrapper
#
# Authors:
# NSE-Script: Patrik Karlsson
# NASL-Wrapper: autogenerated
#
# Copyright:
# NSE-Script: The Nmap Security Scanner (http://nmap.org)
# Copyright (C) 2011 Greenbone Networks GmbH, http://www.greenbone.net
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# (or any later version), as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################

include("revisions-lib.inc");
tag_summary = "Queries Microsoft SQL Server (ms-sql) for a list of tables per database.

The sysdatabase table should be accessible by more or less everyone The script attempts to use the
sa account over any other if it has the password in the registry. If not the first account in the
registry is used.

Once we have a list of databases we iterate over it and attempt to extract table names. In order for
this to succeed we need to have either sysadmin privileges or an account with access to the db. So,
each database we successfully enumerate tables from we mark as finished, then iterate over known
user accounts until either we have exhausted the users or found all tables in all the databases.

Tables installed by default are excluded.


SYNTAX:

mssql-tables.maxdb:  Limits the amount of databases that are
processed and returned (default 5). If set to zero or less 
all databases are processed.



mssql.timeout:  How long to wait for SQL responses. This is a number
followed by 'ms' for milliseconds, 's' for seconds,
'm' for minutes, or 'h' for hours. Default:
'30s'.


mssql.password:  specifies the password to use to connect to
the server. This option overrides any accounts found by
the 'ms-sql-brute' and 'ms-sql-empty-password' scripts.



mssql.username:  specifies the username to use to connect to
the server. This option overrides any accounts found by
the 'ms-sql-brute' and 'ms-sql-empty-password' scripts.



mssql-tables.keywords:  If set shows only tables or columns matching
the keywords



mssql-tables.maxtables:  Limits the amount of tables returned
(default 5). If set to zero or less all tables are returned.";

if(description)
{
    script_id(104097);
    script_version("$Revision: 10 $");
    script_tag(name:"last_modification", value:"$Date: 2013-10-27 11:03:59 +0100 (So, 27. Okt 2013) $");
    script_tag(name:"creation_date", value:"2011-06-01 16:32:46 +0200 (Wed, 01 Jun 2011)");
    script_tag(name:"cvss_base", value:"4.0");
    script_tag(name:"cvss_base_vector", value:"AV:N/AC:L/Au:SI/C:P/I:N/A:N");
    script_tag(name:"risk_factor", value:"Medium");
    script_name("Nmap NSE net: ms-sql-tables");
    desc = "
    Summary:
    " + tag_summary;

    script_description(desc);

    script_summary("Nmap NSE net: ms-sql-tables");
    script_category(ACT_INIT);
    script_copyright("NSE-Script: The Nmap Security Scanner; NASL-Wrapper: Greenbone Networks GmbH");
    script_family("Nmap NSE net");

    script_add_preference(name:"mssql-tables.maxdb", value:"", type:"entry");
    script_add_preference(name:"mssql.timeout", value:"", type:"entry");
    script_add_preference(name:"mssql.password", value:"", type:"entry");
    script_add_preference(name:"mssql.username", value:"", type:"entry");
    script_add_preference(name:"mssql-tables.keywords", value:"", type:"entry");
    script_add_preference(name:"mssql-tables.maxtables", value:"", type:"entry");

    if (revcomp(a: OPENVAS_VERSION, b: "6.0+beta5") >= 0) {
      script_tag(name : "summary" , value : tag_summary);
    }
    exit(0);
}


include("nmap.inc");


phase = 0;
if (defined_func("scan_phase")) {
    phase = scan_phase();
}

if (phase == 1) {
    # Get the preferences
    argv = make_array();

    pref = script_get_preference("mssql-tables.maxdb");
    if (!isnull(pref) && pref != "") {
        argv["mssql-tables.maxdb"] = string('"', pref, '"');
    }
    pref = script_get_preference("mssql.timeout");
    if (!isnull(pref) && pref != "") {
        argv["mssql.timeout"] = string('"', pref, '"');
    }
    pref = script_get_preference("mssql.password");
    if (!isnull(pref) && pref != "") {
        argv["mssql.password"] = string('"', pref, '"');
    }
    pref = script_get_preference("mssql.username");
    if (!isnull(pref) && pref != "") {
        argv["mssql.username"] = string('"', pref, '"');
    }
    pref = script_get_preference("mssql-tables.keywords");
    if (!isnull(pref) && pref != "") {
        argv["mssql-tables.keywords"] = string('"', pref, '"');
    }
    pref = script_get_preference("mssql-tables.maxtables");
    if (!isnull(pref) && pref != "") {
        argv["mssql-tables.maxtables"] = string('"', pref, '"');
    }
    nmap_nse_register(script:"ms-sql-tables", args:argv);
} else if (phase == 2) {
    res = nmap_nse_get_results(script:"ms-sql-tables");
    foreach portspec (keys(res)) {
        output_banner = 'Result found by Nmap Security Scanner (ms-sql-tables.nse) http://nmap.org:\n\n';
        if (portspec == "0") {
            security_note(data:output_banner + res[portspec], port:0);
        } else {
            v = split(portspec, sep:"/", keep:0);
            proto = v[0];
            port = v[1];
            security_note(data:output_banner + res[portspec], port:port, protocol:proto);
        }
    }
}
